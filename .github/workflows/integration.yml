jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Copy files
      run: cp docker/latest/** ./
    - continue-on-error: true
      name: Docker build
      run: docker build -t apache/dubbo-admin-integration:latest .
    - continue-on-error: true
      name: Prepare agent
      run: mkdir jacoco && wget https://repo1.maven.org/maven2/org/jacoco/org.jacoco.agent/0.8.6/org.jacoco.agent-0.8.6-runtime.jar
        -O jacoco/jacoco.jar && wget https://repo1.maven.org/maven2/org/jacoco/org.jacoco.cli/0.8.6/org.jacoco.cli-0.8.6-nodeps.jar
        -O jacoco/jacoco-cli.jar
    - continue-on-error: true
      name: Build provider and consumer image
      run: ./mvnw --batch-mode --projects dubbo-admin-test --activate-profiles build-provider
        package && ./mvnw --batch-mode --projects dubbo-admin-test --activate-profiles
        build-consumer package
    - continue-on-error: true
      name: Setup xvfb
      run: sudo apt-get install xvfb ttf-wqy-zenhei -y && fc-cache -v
    - continue-on-error: true
      name: Run integration test
      run: xvfb-run --server-args="-screen 0, 1024x768x24" ./mvnw --batch-mode --projects
        dubbo-admin-test --activate-profiles dubbo-admin-integration-test -Ddocker.showLogs=true
        docker:stop docker:remove verify
    - continue-on-error: true
      if: ${{ failure() }}
      name: Save failure screenshots
      uses: actions/upload-artifact@v2
      with:
        name: failure-screenshots
        path: dubbo-admin-test/target/screens/
    - continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: screenshots
        path: dubbo-admin-test/target/screens/
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - continue-on-error: true
      name: Compile server project
      run: ./mvnw clean package -DskipTests=true -pl dubbo-admin-server
    - continue-on-error: true
      name: Generate report
      run: java -jar jacoco/jacoco-cli.jar report jacoco/jacoco.exec --classfiles
        dubbo-admin-server/target/classes/ --sourcefiles dubbo-admin-server/src --xml
        jacoco/jacoco.xml
    - continue-on-error: true
      name: Upload coverage to codecov
      uses: codecov/codecov-action@v1
      with:
        directory: ./jacoco
        flags: integration
    timeout-minutes: 20
name: Integration
on:
  repository_dispatch:
    types: trigger-ga___integration.yml
